- name: Install required packages
  apt: name={{ item }} state=present
  with_items:
    - wget # for downloading freepbx
    - git # for using the git module
    - unixodbc # for asterisk cdr
    - sudo # required by freepbx install script
    - net-tools # fwconsole requirement
    - cron # required by freepbx ucp package
    - sox # required for CDR web-playback

- name: Add asterisk user
  user: name=asterisk createhome=yes home=/home/asterisk

- name: Install asterisk
  apt: name=asterisk state=present
  when: freepbx_install_asterisk

# we are NOT using the git repo, because otherwise freepbx will complain that the 'framework' module is not signed
- name: Download freepbx
  command: wget -O freepbx.tgz http://mirror.freepbx.org/modules/packages/freepbx/freepbx-15.0-latest.tgz
  args:
    chdir: /usr/src
    creates: /usr/src/freepbx

- name: Unpack freepbx
  command: "{{ item }} chdir=/usr/src creates=freepbx"
  with_items:
    - tar vxfz freepbx.tgz
    - rm freepbx.tgz

- name: Install python-mysqldb (required for ansible mysql_* modules)
  apt: pkg=python-mysqldb state=present

- name: Add mysql user
  mysql_user:
    name: "{{ asterisk_db_user }}"
    password: "{{ asterisk_db_password }}"
    priv: "{{ asterisk_db_dbname }}.*:ALL/{{ asterisk_db_cdrdbname }}.*:ALL"
    login_host: "{{ asterisk_db_host }}"
    host: "{{ (asterisk_db_host == 'localhost') | ternary('localhost', ansible_default_ipv4.address) }}"
    state: present

- name: Add mysql db
  mysql_db:
    name: "{{ asterisk_db_dbname }}"
    encoding: utf8
    collation: utf8_general_ci
    login_host: "{{ asterisk_db_host }}"
    state: present

- name: Add cdr mysql db
  mysql_db:
    name: "{{ asterisk_db_cdrdbname }}"
    encoding: utf8
    collation: utf8_general_ci
    login_host: "{{ asterisk_db_host }}"
    state: present

- name: Setup logrotate
  copy:
    src: logrotate
    dest: /etc/logrotate.d/asterisk
    mode: 0644
    owner: root
    group: root

- name: Set permissions
  file: path={{ item }} state=directory owner=asterisk group=asterisk recurse=yes
  with_items:
    - /var/run/asterisk
    - /etc/asterisk
    - /var/lib/asterisk
    - /var/log/asterisk
    - /var/spool/asterisk
    - /usr/lib/asterisk
  register: freepbx_set_permissions
  changed_when: (ansible_env.CI is not defined or not ansible_env.CI) and freepbx_set_permissions is changed

- name: Disable Asterisk service and stop asterisk
  service: name=asterisk enabled=no state=stopped
  changed_when: false # this apparantly always reports changed

# using named groups due to this: http://www.handverdrahtet.org/2016/01/ansible-using-numbered-backreference.html
- name: Enable freepbx installation with remote mysql db
  replace:
    dest: /usr/src/freepbx/installlib/installcommand.class.php
    regexp: '(?P<firstpart>\$amp_conf\[.AMPDBHOST.\] = .)localhost(.;)'
    replace: '\g<firstpart>{{ asterisk_db_host }}\2'

- name: Don't let freepbx take over the php sessions dir
  blockinfile:
    content: |
      [blacklist]
      directory = /var/lib/php/sessions
    marker: "; {mark} ANSIBLE MANAGED BLOCK"
    dest: /etc/asterisk/freepbx_chown.conf
    owner: asterisk
    group: asterisk
    create: yes

- name: Install freepbx (just ran once)
  command: "{{ item }}"
  args:
   chdir: /usr/src/freepbx
   creates: /var/www/freepbx
  with_items:
    - ./start_asterisk start
    - ./install -n --webroot /var/www/freepbx --dbuser {{ asterisk_db_user }} --dbpass {{ asterisk_db_password }} --dbname {{ asterisk_db_dbname }} --cdrdbname {{ asterisk_db_cdrdbname }}
  register: freepbx_installation

- name: Install systemd freepbx service
  copy: src=freepbx.service dest=/etc/systemd/system/freepbx.service mode=755
  when: ansible_service_mgr == "systemd"

- name: Install upstart freepbx service
  copy: src=freepbx.upstart dest=/etc/init/freepbx.conf
  when: ansible_service_mgr == "upstart"

# http://community.freepbx.org/t/fixing-cdr-cel-on-ubuntu-debian-installation/30836
# Test using `isql -v MySQL-asteriskcdrdb`
- name: Fix asterisk cdr odbc connection (1)
  blockinfile:
    dest: /etc/odbcinst.ini
    create: yes
    marker: "; {mark} ANSIBLE MANAGED BLOCK"
    content: |
      [MySQL]
      Description = ODBC for MySQL
      Driver      = {{ libodbc_path }}
      FileUsage   = 1
  notify: Reload asterisk modules

- name: Fix asterisk cdr odbc connection (2)
  replace:
    dest: /etc/odbc.ini
    regexp: /var/lib/mysql/mysql.sock
    replace: /var/run/mysqld/mysqld.sock
  notify: Reload asterisk modules

- name: Install freepbx modules
  command: "fwconsole ma downloadinstall {{ item }}"
  args:
    creates: /var/www/freepbx/admin/modules/{{ item }}
  with_items: "{{ freepbx_modules }}"

- name: Enable freepbx service
  service: name=freepbx enabled=yes
  when: ansible_connection != 'docker'

- name: Start freepbx
  service: name=freepbx state=started
  when: ansible_connection != 'docker'
  register: freepbx_started

